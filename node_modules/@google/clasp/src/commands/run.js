"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _this = this;
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var manifest_1 = require("../manifest");
var auth_1 = require("../auth");
var urls_1 = require("../urls");
var chalk_1 = __importDefault(require("chalk"));
var apiutils_1 = require("../apiutils");
var pluralize_1 = __importDefault(require("pluralize"));
var readline_1 = __importDefault(require("readline"));
/**
 * Executes an Apps Script function. Requires clasp login --creds.
 * @param functionName {string} The function name within the Apps Script project.
 * @param cmd.nondev {boolean} If we want to run the last deployed version vs the latest code.
 * @param cmd.params {string} JSON string of parameters to be input to function.
 * @see https://developers.google.com/apps-script/api/how-tos/execute
 * @requires `clasp login --creds` to be run beforehand.
 */
exports.default = (function (functionName, cmd) { return __awaiter(_this, void 0, void 0, function () {
    var scriptId, devMode, _a, paramString, params;
    return __generator(this, function (_b) {
        switch (_b.label) {
            case 0: return [4 /*yield*/, utils_1.checkIfOnline()];
            case 1:
                _b.sent();
                return [4 /*yield*/, auth_1.loadAPICredentials()];
            case 2:
                _b.sent();
                return [4 /*yield*/, utils_1.getProjectSettings(true)];
            case 3:
                scriptId = (_b.sent()).scriptId;
                devMode = !cmd.nondev;
                _a = cmd.params, paramString = _a === void 0 ? '[]' : _a;
                params = utils_1.getValidJSON(paramString);
                return [4 /*yield*/, manifest_1.isValidRunManifest()];
            case 4:
                _b.sent();
                // TODO COMMENT THIS. This uses a method that gives a HTML 404.
                // await enableExecutionAPI();
                // Pushes the latest code if in dev mode.
                // We need to update the manifest before executing to:
                // - Ensure the execution API is enabled.
                // - Ensure we can run functions that were developed locally but not pushed.
                if (devMode) {
                    console.log('Running in dev mode.');
                    // TODO enable this once we can properly await pushFiles
                    // await pushFiles(true);
                }
                if (!!functionName) return [3 /*break*/, 6];
                return [4 /*yield*/, apiutils_1.getFunctionNames(auth_1.script, scriptId)];
            case 5:
                functionName = _b.sent();
                _b.label = 6;
            case 6: return [4 /*yield*/, runFunction(functionName, params, scriptId, devMode)];
            case 7:
                _b.sent();
                return [2 /*return*/];
        }
    });
}); });
/**
 * Runs a function.
 * @see https://developers.google.com/apps-script/api/reference/rest/v1/scripts/run#response-body
 */
function runFunction(functionName, params, scriptId, devMode) {
    return __awaiter(this, void 0, void 0, function () {
        var localScript, res, data, err_1, scopes_1, rl_1;
        var _this = this;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    _a.trys.push([0, 4, , 5]);
                    // Load local credentials.
                    return [4 /*yield*/, auth_1.loadAPICredentials(true)];
                case 1:
                    // Load local credentials.
                    _a.sent();
                    return [4 /*yield*/, auth_1.getLocalScript()];
                case 2:
                    localScript = _a.sent();
                    utils_1.spinner.setSpinnerTitle("Running function: " + functionName).start();
                    return [4 /*yield*/, localScript.scripts.run({
                            scriptId: scriptId,
                            requestBody: {
                                function: functionName,
                                parameters: params,
                                devMode: devMode,
                            },
                        })];
                case 3:
                    res = _a.sent();
                    utils_1.spinner.stop(true);
                    if (!res || !res.data.done) {
                        utils_1.logError(null, utils_1.ERROR.RUN_NODATA);
                        process.exit(0); // exit gracefully in case localhost server spun up for authorize
                    }
                    data = res.data;
                    // @see https://developers.google.com/apps-script/api/reference/rest/v1/scripts/run#response-body
                    if (data.response) {
                        if (data.response.result) {
                            console.log(data.response.result);
                        }
                        else {
                            console.log(chalk_1.default.red('No response.'));
                        }
                    }
                    else if (data.error && data.error.details) {
                        // @see https://developers.google.com/apps-script/api/reference/rest/v1/scripts/run#Status
                        console.error("" + chalk_1.default.red('Exception:'), data.error.details[0].errorType, data.error.details[0].errorMessage, data.error.details[0].scriptStackTraceElements || []);
                    }
                    return [3 /*break*/, 5];
                case 4:
                    err_1 = _a.sent();
                    utils_1.spinner.stop(true);
                    if (err_1) {
                        // TODO move these to logError when stable?
                        switch (err_1.code) {
                            case 401:
                                // The 401 is probably due to this error:
                                // "Error: Local client credentials unauthenticated. Check scopes/authorization.""
                                // This is probably due to the OAuth client not having authorized scopes.
                                console.log("Hey! It looks like you aren't authenticated for the scopes required by this script.\nPlease enter the scopes by doing the following:\n1. Open Your Script: " + urls_1.URL.SCRIPT(scriptId) + "\n2. File > Project Properties > Scopes\n3. Copy/Paste the list of scopes here:\n            ~ Example ~\nhttps://mail.google.com/\nhttps://www.googleapis.com/auth/presentations\n----(When you're done, press <Enter> 2x)----");
                                scopes_1 = [];
                                rl_1 = readline_1.default.createInterface({
                                    input: process.stdin,
                                    output: process.stdout,
                                    prompt: '',
                                });
                                rl_1.prompt();
                                rl_1.on('line', function (cmd) {
                                    if (cmd === '') {
                                        rl_1.close();
                                    }
                                    else {
                                        scopes_1.push(cmd);
                                    }
                                });
                                rl_1.on('close', function () { return __awaiter(_this, void 0, void 0, function () {
                                    var numScopes;
                                    return __generator(this, function (_a) {
                                        switch (_a.label) {
                                            case 0: return [4 /*yield*/, manifest_1.addScopeToManifest(scopes_1)];
                                            case 1:
                                                _a.sent();
                                                numScopes = scopes_1.length;
                                                console.log("Added " + numScopes + " " + (pluralize_1.default('scope', numScopes) + " to your appsscript.json' oauthScopes"));
                                                console.log('Please `clasp login --creds <file>` to log in with these new scopes.');
                                                return [2 /*return*/];
                                        }
                                    });
                                }); });
                                // We probably don't need to show the unauth error
                                // since we always prompt the user to fix this now.
                                // logError(null, ERROR.UNAUTHENTICATED_LOCAL);
                                break;
                            case 403:
                                utils_1.logError(null, utils_1.ERROR.PERMISSION_DENIED_LOCAL);
                                break;
                            case 404:
                                utils_1.logError(null, utils_1.ERROR.EXECUTE_ENTITY_NOT_FOUND);
                                break;
                            default:
                                utils_1.logError(null, "(" + err_1.code + ") Error: " + err_1.message);
                        }
                    }
                    return [3 /*break*/, 5];
                case 5: return [2 /*return*/];
            }
        });
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicnVuLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicnVuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlCQWtKQTs7QUFsSkEsa0NBQXFHO0FBQ3JHLHdDQUFxRTtBQUNyRSxnQ0FBcUU7QUFFckUsZ0NBQThCO0FBQzlCLGdEQUEwQjtBQUMxQix3Q0FBK0M7QUFDL0Msd0RBQWtDO0FBQ2xDLHNEQUFnQztBQUNoQzs7Ozs7OztHQU9HO0FBQ0gsbUJBQWUsVUFBTyxZQUFvQixFQUFFLEdBQXdDOzs7O29CQUNsRixxQkFBTSxxQkFBYSxFQUFFLEVBQUE7O2dCQUFyQixTQUFxQixDQUFDO2dCQUN0QixxQkFBTSx5QkFBa0IsRUFBRSxFQUFBOztnQkFBMUIsU0FBMEIsQ0FBQztnQkFDTixxQkFBTSwwQkFBa0IsQ0FBQyxJQUFJLENBQUMsRUFBQTs7Z0JBQTNDLFFBQVEsR0FBSyxDQUFBLFNBQThCLENBQUEsU0FBbkM7Z0JBQ1YsT0FBTyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQztnQkFDcEIsS0FBK0IsR0FBRyxPQUFSLEVBQWxCLFdBQVcsbUJBQUcsSUFBSSxLQUFBLENBQVM7Z0JBQ3JDLE1BQU0sR0FBRyxvQkFBWSxDQUFXLFdBQVcsQ0FBQyxDQUFDO2dCQUVuRCxxQkFBTSw2QkFBa0IsRUFBRSxFQUFBOztnQkFBMUIsU0FBMEIsQ0FBQztnQkFFM0IsK0RBQStEO2dCQUMvRCw4QkFBOEI7Z0JBRTlCLHlDQUF5QztnQkFDekMsc0RBQXNEO2dCQUN0RCx5Q0FBeUM7Z0JBQ3pDLDRFQUE0RTtnQkFDNUUsSUFBSSxPQUFPLEVBQUU7b0JBQ1gsT0FBTyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO29CQUNwQyx3REFBd0Q7b0JBQ3hELHlCQUF5QjtpQkFDMUI7cUJBR0csQ0FBQyxZQUFZLEVBQWIsd0JBQWE7Z0JBQWlCLHFCQUFNLDJCQUFnQixDQUFDLGFB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