"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var inquirer_1 = require("inquirer");
var apis_1 = require("./apis");
var utils_1 = require("./utils");
inquirer_1.registerPrompt('autocomplete', require('inquirer-autocomplete-prompt'));
/**
 * Inquirer prompt for a functionName.
 * @returns {Promise<{ functionName: string }>} A promise for an object with the `functionName` property.
 */
exports.functionNamePrompt = function (source) {
    var question = {
        name: 'functionName',
        message: 'Select a functionName',
        type: 'autocomplete',
        source: source,
    };
    return inquirer_1.prompt(question);
};
/**
 * Inquirer prompt for a deployment Id.
 * @param {DeploymentIdPrompt[]} choices An array of `DeploymentIdPrompt` objects.
 * @returns {Promise<{ deploymentId: string }>} A promise for an object with the `deploymentId` property.
 */
exports.deploymentIdPrompt = function (choices) { return inquirer_1.prompt([
    {
        choices: choices,
        message: 'Open which deployment?',
        name: 'deploymentId',
        type: 'list',
    },
]); };
/**
 * Inquirer prompt for a project description.
 * @returns {Promise<{ description: string }>} A promise for an object with the `description` property.
 */
exports.descriptionPrompt = function () { return inquirer_1.prompt([{
        default: '',
        message: utils_1.LOG.GIVE_DESCRIPTION,
        name: 'description',
        type: 'input',
    }]); };
/**
 * Inquirer prompt for oauth scopes.
 * @returns {Promise<PromptAnswers>} A promise for an object with the `PromptAnswers` interface.
 */
exports.oauthScopesPrompt = function () { return inquirer_1.prompt([{
        message: 'Authorize new scopes?',
        name: 'doAuth',
        type: 'confirm',
    }, {
        message: 'Use localhost?',
        name: 'localhost',
        type: 'confirm',
        when: function (answers) {
            return answers.doAuth;
        },
    }]); };
/**
 * Inquirer prompt for overwriting a manifest.
 * @returns {Promise<{ overwrite: boolean }>} A promise for an object with the `overwrite` property.
 */
exports.overwritePrompt = function () { return inquirer_1.prompt([{
        default: false,
        message: 'Manifest file has been updated. Do you want to push and overwrite?',
        name: 'overwrite',
        type: 'confirm',
    }]); };
/**
 * Inquirer prompt for project Id.
 * @returns {Promise<{ projectId: string }>} A promise for an object with the `projectId` property.
 */
exports.projectIdPrompt = function () { return inquirer_1.prompt([{
        message: "" + utils_1.LOG.ASK_PROJECT_ID,
        name: 'projectId',
        type: 'input',
    }]); };
/**
 * Inquirer prompt for script Id.
 * @param {ScriptIdPrompt[]} fileIds An array of `ScriptIdPrompt` objects.
 * @returns {Promise<{scriptId: string;}>} A promise for an object with the `scriptId` property.
 */
exports.scriptIdPrompt = function (fileIds) { return inquirer_1.prompt([
    {
        choices: fileIds,
        message: utils_1.LOG.CLONE_SCRIPT_QUESTION,
        name: 'scriptId',
        pageSize: 30,
        type: 'list',
    },
]); };
/**
 * Inquirer prompt for script type.
 * @returns {Promise<{ type: string }>} A promise for an object with the `type` property.
 */
exports.scriptTypePrompt = function () { return inquirer_1.prompt([{
        choices: Object.keys(apis_1.SCRIPT_TYPES).map(function (key) { return apis_1.SCRIPT_TYPES[key]; }),
        message: utils_1.LOG.CREATE_SCRIPT_QUESTION,
        name: 'type',
        type: 'list',
    }]); };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5xdWlyZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbnF1aXJlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLHFDQUE0RDtBQUM1RCwrQkFBc0M7QUFDdEMsaUNBQThCO0FBRTlCLHlCQUFjLENBQUMsY0FBYyxFQUFFLE9BQU8sQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLENBQUM7QUFLeEU7OztHQUdHO0FBQ1UsUUFBQSxrQkFBa0IsR0FBRyxVQUFDLE1BQTBCO0lBQzNELElBQU0sUUFBUSxHQUFHO1FBQ2YsSUFBSSxFQUFFLGNBQWM7UUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtRQUNoQyxJQUFJLEVBQUUsY0FBYztRQUNwQixNQUFNLFFBQUE7S0FDZ0IsQ0FBQztJQUN6QixPQUFPLGlCQUFNLENBQTJCLFFBQVEsQ0FBQyxDQUFDO0FBQ3BELENBQUMsQ0FBQztBQU9GOzs7O0dBSUc7QUFDVSxRQUFBLGtCQUFrQixHQUFHLFVBQUMsT0FBNkIsSUFBSyxPQUFBLGlCQUFNLENBQTJCO0lBQ3BHO1FBQ0UsT0FBTyxTQUFBO1FBQ1AsT0FBTyxFQUFFLHdCQUF3QjtRQUNqQyxJQUFJLEVBQUUsY0FBYztRQUNwQixJQUFJLEVBQUUsTUFBTTtLQUNiO0NBQ0YsQ0FBQyxFQVBtRSxDQU9uRSxDQUFDO0FBRUg7OztHQUdHO0FBQ1UsUUFBQSxpQkFBaUIsR0FBRyxjQUFNLE9BQUEsaUJBQU0sQ0FBMEIsQ0FBQztRQUN0RSxPQUFPLEVBQUUsRUFBRTtRQUNYLE9BQU8sRUFBRSxXQUFHLENBQUMsZ0JBQWdCO1FBQzdCLElBQUksRUFBRSxhQUFhO1FBQ25CLElBQUksRUFBRSxPQUFPO0tBQ2QsQ0FBQyxDQUFDLEVBTG9DLENBS3BDLENBQUM7QUFPSjs7O0dBR0c7QUFDVSxRQUFBLGlCQUFpQixHQUFHLGNBQU0sT0FBQSxpQkFBTSxDQUFnQixDQUFDO1FBQzVELE9BQU8sRUFBRSx1QkFBdUI7UUFDaEMsSUFBSSxFQUFFLFFBQVE7UUFDZCxJQUFJLEVBQUUsU0FBUztLQUNoQixFQUFFO1FBQ0QsT0FBTyxFQUFFLGdCQUFnQjtRQUN6QixJQUFJLEVBQUUsV0FBVztRQUNqQixJQUFJLEVBQUUsU0FBUztRQUNmLElBQUksRUFBRSxVQUFDLE9BQXNCO1lBQzNCLE9BQU8sT0FBTyxDQUFDLE1BQU0sQ0FBQztRQUN4QixDQUFDO0tBQ0YsQ0FBQyxDQUFDLEVBWG9DLENBV3BDLENBQUM7QUFFSjs7O0dBR0c7QUFDVSxRQUFBLGVBQWUsR0FBRyxjQUFNLE9BQUEsaUJBQU0sQ0FBeUIsQ0FBQztRQUNuRSxPQUFPLEVBQUUsS0FBSztRQUNkLE9BQU8sRUFBRSxvRUFBb0U7UUFDN0UsSUFBSSxFQUFFLFdBQVc7UUFDakIsSUFBSSxFQUFFLFNBQVM7S0FDaEIsQ0FBQyxDQUFDLEVBTGtDLENBS2xDLENBQUM7QUFFSjs7O0dBR0c7QUFDVSxRQUFBLGVBQWUsR0FBRyxjQUFNLE9BQUEsaUJBQU0sQ0FBd0IsQ0FBQztRQUNsRSxPQUFPLEVBQUUsS0FBRyxXQUFHLENBQUMsY0FBZ0I7UUFDaEMsSUFBSSxFQUFFLFdBQVc7UUFDakIsSUFBSSxFQUFFLE9BQU87S0FDZCxDQUFDLENBQUMsRUFKa0MsQ0FJbEMsQ0FBQztBQU9KOzs7O0dBSUc7QUFDVSxRQUFBLGNBQWMsR0FBRyxVQUFDLE9BQXlCLElBQUssT0FBQSxpQkFBTSxDQUF1QjtJQUN4RjtRQUNFLE9BQU8sRUFBRSxPQUFPO1FBQ2hCLE9BQU8sRUFBRSxXQUFHLENBQUMscUJBQXFCO1FBQ2xDLElBQUksRUFBRSxVQUFVO1FBQ2hCLFFBQVEsRUFBRSxFQUFFO1FBQ1osSUFBSSxFQUFFLE1BQU07S0FDYjtDQUNGLENBQUMsRUFSMkQsQ0FRM0QsQ0FBQztBQUVIOzs7R0FHRztBQUNVLFFBQUEsZ0JBQWdCLEdBQUcsY0FBTSxPQUFBLGlCQUFNLENBQW1CLENBQUM7UUFDOUQsT0FBTyxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsbUJBQVksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxVQUFDLEdBQUcsSUFBSyxPQUFBLG1CQUFZLENBQUMsR0FBd0IsQ0FBQyxFQUF0QyxDQUFzQyxDQUFDO1FBQ3ZGLE9BQU8sRUFBRSxXQUFHLENBQUMsc0JBQXNCO1FBQ25DLElBQUksRUFBRSxNQUFNO1FBQ1osSUFBSSxFQUFFLE1BQU07S0FDYixDQUFDLENBQUMsRUFMbUMsQ0FLbkMsQ0FBQyJ9