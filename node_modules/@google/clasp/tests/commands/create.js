"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var functions_1 = require("../functions");
var mocha_1 = require("mocha");
var constants_1 = require("../constants");
var utils_1 = require("../../src/utils");
var chai_1 = require("chai");
var fs_extra_1 = __importDefault(require("fs-extra"));
var child_process_1 = require("child_process");
mocha_1.describe('Test clasp create function', function () {
    before(functions_1.setup);
    mocha_1.it('should prompt for a project name correctly', function () {
        child_process_1.spawnSync('rm', ['.clasp.json']);
        var result = child_process_1.spawnSync(constants_1.CLASP, ['create'], { encoding: 'utf8' });
        chai_1.expect(result.stdout).to.contain(utils_1.LOG.CREATE_SCRIPT_QUESTION);
    });
    mocha_1.it('should not prompt for project name', function () {
        fs_extra_1.default.writeFileSync('.clasp.json', '');
        var result = child_process_1.spawnSync(constants_1.CLASP, ['create'], { encoding: 'utf8' });
        chai_1.expect(result.stderr).to.contain('Project file (.clasp.json) already exists.');
    });
    after(functions_1.cleanup);
});
mocha_1.describe('Test clasp create <title> function', function () {
    before(functions_1.setup);
    mocha_1.it('should create a new project named <title> correctly', function () {
        child_process_1.spawnSync('rm', ['.clasp.json']);
        var result = child_process_1.spawnSync(constants_1.CLASP, ['create', '--type', 'Standalone', '--title', 'myTitle'], { encoding: 'utf8' });
        chai_1.expect(result.stdout).to.contain('Created new Standalone script: https://script.google.com/d/');
        chai_1.expect(result.status).to.equal(0);
    });
});
mocha_1.describe('Test clasp create <parentId> function', function () {
    before(functions_1.setup);
    mocha_1.it('should not prompt for script types with parentId', function () {
        child_process_1.spawnSync('rm', ['.clasp.json']);
        var result = child_process_1.spawnSync(constants_1.CLASP, ['create', '--parentId', '"1D_Gxyv*****************************NXO7o"'], { encoding: 'utf8' });
        chai_1.expect(result.stdout).to.not.contain(utils_1.LOG.CREATE_SCRIPT_QUESTION);
        chai_1.expect(result.stderr).to.contain('Request contains an invalid argument.');
    });
    after(functions_1.cleanup);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY3JlYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsMENBQThDO0FBQzlDLCtCQUFxQztBQUVyQywwQ0FBcUM7QUFDckMseUNBQXNDO0FBQ3RDLDZCQUE4QjtBQUM5QixzREFBMEI7QUFDMUIsK0NBQTBDO0FBRTFDLGdCQUFRLENBQUMsNEJBQTRCLEVBQUU7SUFDckMsTUFBTSxDQUFDLGlCQUFLLENBQUMsQ0FBQztJQUNkLFVBQUUsQ0FBQyw0Q0FBNEMsRUFBRTtRQUMvQyx5QkFBUyxDQUFDLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDakMsSUFBTSxNQUFNLEdBQUcseUJBQVMsQ0FDdEIsaUJBQUssRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxDQUN4QyxDQUFDO1FBQ0YsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLFdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO0lBQy9ELENBQUMsQ0FBQyxDQUFDO0lBQ0gsVUFBRSxDQUFDLG9DQUFvQyxFQUFFO1FBQ3ZDLGtCQUFFLENBQUMsYUFBYSxDQUFDLGFBQWEsRUFBRSxFQUFFLENBQUMsQ0FBQztRQUNwQyxJQUFNLE1BQU0sR0FBRyx5QkFBUyxDQUN0QixpQkFBSyxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQ3hDLENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsNENBQTRDLENBQUMsQ0FBQztJQUNqRixDQUFDLENBQUMsQ0FBQztJQUNILEtBQUssQ0FBQyxtQkFBTyxDQUFDLENBQUM7QUFDakIsQ0FBQyxDQUFDLENBQUM7QUFFSCxnQkFBUSxDQUFDLG9DQUFvQyxFQUFFO0lBQzdDLE1BQU0sQ0FBQyxpQkFBSyxDQUFDLENBQUM7SUFDZCxVQUFFLENBQUMscURBQXFELEVBQUU7UUFDeEQseUJBQVMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDO1FBQ2pDLElBQU0sTUFBTSxHQUFHLHlCQUFTLENBQ3RCLGlCQUFLLEVBQUUsQ0FBQyxRQUFRLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQ3RGLENBQUM7UUFDRixhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsNkRBQTZELENBQUMsQ0FBQztRQUNoRyxhQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7SUFDcEMsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQztBQUVILGdCQUFRLENBQUMsdUNBQXVDLEVBQUU7SUFDaEQsTUFBTSxDQUFDLGlCQUFLLENBQUMsQ0FBQztJQUNkLFVBQUUsQ0FBQyxrREFBa0QsRUFBRTtRQUNyRCx5QkFBUyxDQUFDLElBQUksRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDakMsSUFBTSxNQUFNLEdBQUcseUJBQVMsQ0FDdEIsaUJBQUssRUFBRSxDQUFDLFFBQVEsRUFBRSxZQUFZLEVBQUUsNkNBQTZDLENBQUMsRUFBRSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FDckcsQ0FBQztRQUNGLGFBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBRyxDQUFDLHNCQUFzQixDQUFDLENBQUM7UUFDakUsYUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsT0FBTyxDQUFDLHVDQUF1QyxDQUFDLENBQUM7SUFDNUUsQ0FBQyxDQUFDLENBQUM7SUFDSCxLQUFLLENBQUMsbUJBQU8sQ0FBQyxDQUFDO0FBQ2pCLENBQUMsQ0FBQyxDQUFDIn0=